{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/beiko-lab/ARETE/master/nextflow_schema.json",
    "title": "beiko-lab/ARETE pipeline parameters",
    "description": "AMR/VF LGT-focused bacterial genomics workflow",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input_sample_table"],
            "properties": {
                "input_sample_table": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "description": "Path to the output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open"
                },
                "db_cache": {
                    "type": "string",
                    "default": "None",
                    "fa_icon": "fas fa-database",
                    "description": "Directory where the databases are located"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference and outgroup genome fasta files required for the workflow.",
            "properties": {
                "reference_genome": {
                    "type": "string",
                    "fa_icon": "fas fa-file-code",
                    "description": "Path to FASTA reference genome file."
                }
            }
        },
        "kraken2": {
            "title": "Kraken2",
            "type": "object",
            "description": "Options for the Kraken2 taxonomic classification",
            "default": "",
            "properties": {
                "skip_kraken": {
                    "type": "boolean",
                    "description": "Don't run Kraken2 taxonomic classification",
                    "fa_icon": "fas fa-forward"
                }
            },
            "fa_icon": "fas fa-align-left"
        },
        "annotation": {
            "title": "Annotation",
            "type": "object",
            "description": "Parameters for the annotation subworkflow",
            "default": "",
            "fa_icon": "fas fa-edit",
            "properties": {
                "annotation_tools": {
                    "type": "string",
                    "default": "mobsuite,rgi,cazy,vfdb,iceberg,bacmet,islandpath,phispy,report",
                    "fa_icon": "fas fa-tools",
                    "description": "Comma-separated list of annotation tools to run",
                    "pattern": "^((rgi|mobsuite|islandpath|phispy|vfdb|cazy|bacmet|iceberg|integronfinder|report)?,?)*(?<!,)$"
                },
                "bakta_db": {
                    "type": "string",
                    "default": "None",
                    "fa_icon": "fas fa-database",
                    "description": "Path to the BAKTA database"
                },
                "use_prokka": {
                    "type": "boolean",
                    "fa_icon": "fas fa-bacterium",
                    "description": "Use Prokka (not Bakta) for annotating assemblies"
                },
                "min_pident": {
                    "type": "integer",
                    "default": 60,
                    "fa_icon": "fas fa-equals",
                    "description": "Minimum match identity percentage for filtering"
                },
                "min_qcover": {
                    "type": "number",
                    "default": 0.6,
                    "fa_icon": "fas fa-equals",
                    "description": "Minimum coverage of each match for filtering"
                },
                "skip_phispy": {
                    "type": "boolean",
                    "fa_icon": "fas fa-virus",
                    "description": "Skip PhiSpy phage detection tool"
                }
            }
        },
        "phylogenomics": {
            "title": "Phylogenomics",
            "type": "object",
            "description": "Parameters for the phylogenomics subworkflow",
            "default": "",
            "fa_icon": "fab fa-pagelines",
            "properties": {
                "skip_phylo": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip Pangenomics and Phylogenomics subworkflow"
                },
                "use_ppanggolin": {
                    "type": "boolean",
                    "fa_icon": "fas fa-expand",
                    "description": "Use ppanggolin for calculating the pangenome"
                },
                "use_full_alignment": {
                    "type": "boolean",
                    "description": "Use full alignment",
                    "fa_icon": "fas fa-align-justify"
                },
                "use_fasttree": {
                    "type": "boolean",
                    "description": "Use FastTree",
                    "fa_icon": "fas fa-tree",
                    "default": true
                }
            }
        },
        "poppunk": {
            "title": "PopPUNK",
            "type": "object",
            "description": "Parameters for the lineage subworkflow",
            "default": "",
            "fa_icon": "fas fa-object-group",
            "properties": {
                "skip_poppunk": {
                    "type": "boolean",
                    "description": "Skip PopPunk",
                    "fa_icon": "fas fa-forward"
                },
                "poppunk_model": {
                    "type": "string",
                    "default": "None",
                    "description": "Which PopPunk model to use (bgmm, dbscan, refine, threshold or lineage)",
                    "fa_icon": "fas fa-indent"
                },
                "run_poppunk_qc": {
                    "type": "boolean",
                    "description": "Whether to run the QC step for PopPunk",
                    "fa_icon": "fas fa-industry"
                },
                "enable_subsetting": {
                    "type": "boolean",
                    "fa_icon": "fas fa-tasks",
                    "description": "Enable subsetting workflow based on genome similarity"
                },
                "core_similarity": {
                    "type": "number",
                    "default": 99.99,
                    "fa_icon": "fas fa-clone",
                    "description": "Similarity threshold for core genomes"
                },
                "accessory_similarity": {
                    "type": "number",
                    "default": 99,
                    "fa_icon": "far fa-clone",
                    "description": "Similarity threshold for accessory genes"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "enable_conda": {
                    "type": "boolean",
                    "description": "Run this workflow with Conda. You can also use '-profile conda' instead of providing this parameter.",
                    "hidden": true,
                    "fa_icon": "fas fa-bacon"
                },
                "singularity_pull_docker_container": {
                    "type": "boolean",
                    "description": "Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead.",
                    "hidden": true,
                    "fa_icon": "fas fa-toolbox",
                    "help_text": "This may be useful for example if you are unable to directly pull Singularity containers to run the pipeline due to http/https proxy issues."
                },
                "multiqc_logo": {
                    "type": "string",
                    "default": "None",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/kraken2"
        },
        {
            "$ref": "#/definitions/annotation"
        },
        {
            "$ref": "#/definitions/phylogenomics"
        },
        {
            "$ref": "#/definitions/poppunk"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
